//
//  HomePageViewController.m
//  Seepet
//
//  Created by Mac on 13-11-11.
//
//

#import "HomePageViewController.h"
#import "SWRevealViewController.h"
#import "CustomTableViewCell.h"
#import "BTEAbstractEngineAcitivity.h"
#import "CustomInfoViewController.h"
#import "ShareViewController.h"
#import "MenuViewController.h"

@interface HomePageViewController ()
{
    int postType;
    int page;
    BOOL loadMore;
}
@end

@implementation HomePageViewController
#pragma mark - title view
-(void)titleLeftButtonPressed:(UIButton *)button
{
    BTEUserBean* bean = [[self getAms] getUserInfo];
    if (bean !=nil) {
         [[NSNotificationCenter defaultCenter] postNotificationName:LoginNotification object:self];
    }
    else
    {
        [[NSNotificationCenter defaultCenter] postNotificationName:LogoutNotification object:self]; 
    }
    [self.revealViewController revealToggle:self];
}

-(void)titleRightButtonPressed:(UIButton *)button
{
   
    if ( [Common checkUserLogin]) {
        ShareViewController* next = [[ShareViewController alloc]init];
        [self.navigationController pushViewController:next animated:YES];
    }
}

-(void)titleTabButtonPressed:(UIButton *)button
{
    int tag = [button tag];
    if (tag == 0) {
        postType = 2;
    }
    else if (tag == 1){
        postType = 4;
    }
    else{
        postType = 3;
    }
    
    [self refreshHeaderView];
    
}
#pragma mark - view
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    postType = 2;
    page = 1;
    
    [titleView setDelegate:self];
    NSArray *tabArray = [[NSArray alloc] initWithObjects:@"精选",@"最热",@"最新", nil];
    [titleView setTitleViewWithTab:tabArray selection:0 leftIcon:@"side_icon.png" rightIcon:@"icon_post_enable.png"];
    
    _ListData = [[NSMutableArray alloc] initWithCapacity:0];
    [self.view setBackgroundColor:[UIColor colorWithPatternImage:[UIImage imageNamed:@"main_background.png"]]];
    [_TableView setFrame:CGRectMake(0, Title_Height, Screen_Width, Screen_Height - Title_Height)];
    
    //EGORefresh 刷新、加载 
    _refreshHeaderView = [[EGORefreshTableHeaderView alloc] initWithFrame:CGRectMake(0, 0 - Screen_Height, Screen_Width, Screen_Height)];
    [_TableView addSubview:_refreshHeaderView];
    _refreshHeaderView.delegate = self;
    
    CGFloat height = MAX(Screen_Height - Title_Height, _TableView.contentSize.height);
    _refreshFooterView = [[EGORefreshTableFooterView alloc] initWithFrame:CGRectMake(0, height, Screen_Width, Screen_Height)];
    [_TableView addSubview:_refreshFooterView];
    _refreshFooterView.delegate = self;
//    MenuViewController* menu = (MenuViewController*)self.revealViewController.rearViewController;
//    [menu._TableView selectRowAtIndexPath:[NSIndexPath indexPathForItem:0 inSection:0] animated:NO scrollPosition:UITableViewScrollPositionTop];
    [self refreshHeaderView];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshHeaderView) name:LoginNotification object:nil];
    AppDelegate *_AppDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
    [_AppDelegate._QuadCurveMenu removeFromSuperview];
    [self.view addSubview:_AppDelegate._QuadCurveMenu];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - UITableView

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [_ListData count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CustomTableViewCell *cell = (CustomTableViewCell *)[self tableView:tableView cellForRowAtIndexPath:indexPath];
    return cell.contentView.frame.size.height;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *AttentionTableViewCellIdentifier = @"AttentionTableViewCellIdentifier";
    CustomTableViewCell *cell = (CustomTableViewCell *)[tableView dequeueReusableCellWithIdentifier:AttentionTableViewCellIdentifier];
    
    if(cell == nil) {
        cell = [[[NSBundle mainBundle] loadNibNamed:@"CustomTableViewCell" owner:self options:nil] lastObject];
    }
    
    
    if (_ListData.count != 0) {
        cell.cellPortraitButton.tag = indexPath.row;
        [cell.cellPortraitButton addTarget:self action:@selector(portraitButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        cell.praiseButton.tag = indexPath.row;
        [cell.praiseButton addTarget:self action:@selector(praiseButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        cell.slanderButton.tag = indexPath.row;
        [cell.slanderButton addTarget:self action:@selector(slanderButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        cell.commentButton.tag = indexPath.row;
        [cell.commentButton addTarget:self action:@selector(commentButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
        
        cell.collectButton.tag = indexPath.row;
        [cell.collectButton addTarget:self action:@selector(collectButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(BottmViewClicked:)];
        [cell.cellBottmView addGestureRecognizer:tap];
        
        cell.cellIamgeView.tag = indexPath.row;
        UITap *imagetap = [[UITap alloc] initWithTarget:self action:@selector(showImage:)];
        imagetap.tag = indexPath.row;
        [cell.cellIamgeView addGestureRecognizer:imagetap];
        PostInfo *postInfo = [_ListData objectAtIndex:indexPath.row];
        
        [cell showPostInfo:postInfo];
        //设置CellFrame return前调用
        [cell setCustomTableViewCellFrame];
    }
    
    
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
//    CustomAlertView *alert = [[CustomAlertView alloc] init];
//    [alert setDelegate:self];
//    NSString *message = [NSString stringWithFormat:@"你点击了第 %d 行", indexPath.row];
//    [alert showAlertWithTitle:@"提示" message:message leftButtonName:@"确定" rightButtonName:@"取消" withObject:indexPath];
    
    PostInfo *postInfo = [_ListData objectAtIndex:indexPath.row];
    if ([Common checkUserLogin]) {
        PostDetailViewController *nextView = [[PostDetailViewController alloc] init];
        [nextView setDataIndex:indexPath.row];
        [nextView setDelegate:self];
        [nextView setPostInfo:postInfo];
  
    }
}


#pragma mark - EGORefreshTableView

-(void)setHeaderView
{
    [_refreshHeaderView setFrame:CGRectMake(0, 0 - Screen_Height, Screen_Width, Screen_Height)];
}

-(void)setFooterView
{
    CGFloat height = MAX(Screen_Height - Title_Height, _TableView.contentSize.height);
    [_refreshFooterView setFrame:CGRectMake(0, height, Screen_Width, Screen_Height)];
}

- (void)finishReloadingData
{
    _reloading = NO;
    
    [_refreshHeaderView egoRefreshScrollViewDataSourceDidFinishedLoading:_TableView];
    [_refreshFooterView egoRefreshScrollViewDataSourceDidFinishedLoading:_TableView];
    
    [_TableView reloadData];
    
    [self setHeaderView];
    [self setFooterView];
}

- (BOOL)egoRefreshTableDataSourceIsLoading:(UIView*)view
{
	return _reloading;
}

- (void)egoRefreshTableDidTriggerRefresh:(EGORefreshPos)aRefreshPos
{
    _reloading = YES;
    
    if (aRefreshPos == EGORefreshHeader)
    {
        [self performSelector:@selector(refreshHeaderView) withObject:nil afterDelay:0];
    }
    else if(aRefreshPos == EGORefreshFooter)
    {
        [self performSelector:@selector(refreshFooterView) withObject:nil afterDelay:0];
    }
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [_refreshHeaderView egoRefreshScrollViewDidScroll:scrollView];
    [_refreshFooterView egoRefreshScrollViewDidScroll:scrollView];
}

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    [_refreshHeaderView egoRefreshScrollViewDidEndDragging:scrollView];
    [_refreshFooterView egoRefreshScrollViewDidEndDragging:scrollView];
}

//刷新调用的方法
-(void)refreshHeaderView
{
    loadMore = NO;
    page = 1;
    [_ListData removeAllObjects];
    
    [self loadPostWithType:postType];
}

//加载调用的方法
-(void)refreshFooterView
{
    loadMore = YES;
    if (page == 1) {
        page = 2;
    }
    
    [self loadPostWithType:postType];
}
-(void)loadPostWithType:(NSInteger)type
{
    NSMutableDictionary *conditions = [[NSMutableDictionary alloc] init];

    [conditions setValue:[NSString stringWithFormat:@"%d", page] forKey:@"currentpage"];
    
    NSLog(@"current page:  %i",page);

    
    //2为精选,3为最新,4为最热
    NSString *cmdCode = [NSString stringWithFormat:@"%i",type];
    
    
    [self doService:@"200001" setCmd:cmdCode setConditions:conditions setHttpInfo:^(BTEHttpResult *result) {

        BTEHttpResultDatas *datas = result._datas;
        NSArray *list = datas._list;
        for (NSDictionary *dic in list) {
            PostInfo *postInfo = [[PostInfo alloc] initWithDictionary:dic];
            [_ListData addObject:postInfo];
        }
        if (_ListData.count!=0 && loadMore) {
            page++;
        }
        [self performSelector:@selector(finishReloadingData) withObject:nil afterDelay:0.5];
    }];

}

#pragma mark -
#pragma mark button click
-(void)showImage:(id)sender
{
    PostInfo *post = [_ListData objectAtIndex:[sender tag]];
    ImageViewController *imageController = [[ImageViewController alloc] init];
    imageController.imageUrlString = [Common setCorrectURL:post.pic];
    [self.navigationController pushViewController:imageController animated:YES];
   
}
-(void)portraitButtonClicked:(id)sender
{
    PostInfo *post = [_ListData objectAtIndex:[sender tag]];
    CustomInfoViewController *customView = [[CustomInfoViewController alloc] init];
    customView.user_id = post.user_id;
    [self.navigationController pushViewController:customView animated:YES];
}
-(void)customAlertViewLeftButtonPressed:(id)object
{
    NSLog(@"确定 : %d", ((NSIndexPath *)object).row);
    CustomInfoViewController *customView = [[CustomInfoViewController alloc] init];
    [self.navigationController pushViewController:customView animated:YES];
}

-(void)customAlertViewRightButtonPressed:(id)object
{
    NSLog(@"取消 : %d", ((NSIndexPath *)object).row);
}

-(void)praiseButtonClicked:(id)sender
{
    NSMutableDictionary *para = [[NSMutableDictionary alloc] initWithCapacity:0];
    [para setValue:((PostInfo *)[_ListData objectAtIndex:[sender tag]]).message_id forKey:@"messageId"];
    
    [self doService:@"210001" setCmd:@"1" setConditions:para setHttpInfo:^(BTEHttpResult *result) {
        
        BTEHttpResultDatas *datas = result._datas;
        if ([[datas._item valueForKey:@"UPDATE_EXECUTE"] boolValue]) {
            NSLog(@"%@",datas._item);
            [self performSelector:@selector(updatePostInfoWithSender:) withObject:sender afterDelay:0];
        }
            }
     setHttpCheckErr:^(BTEHttpResult *result) {
         NSLog(@"Err : %@",result._datas._errors);
        [self.view makeToast:((BTEErrorData *)[result._datas._errors objectAtIndex:0])._detaiMsg duration:1.5 position:@"bottom"];
     }
     ];
}

-(void)slanderButtonClicked:(id)sender
{
    NSMutableDictionary *para = [[NSMutableDictionary alloc] initWithCapacity:0];
    [para setValue:((PostInfo *)[_ListData objectAtIndex:[sender tag]]).message_id forKey:@"messageId"];
    
    [self doService:@"210001" setCmd:@"2" setConditions:para setHttpInfo:^(BTEHttpResult *result) {
        
        BTEHttpResultDatas *datas = result._datas;

        if ([[datas._item valueForKey:@"UPDATE_EXECUTE"] boolValue]) {
            NSLog(@"%@",datas._item);
            [self performSelector:@selector(updatePostInfoWithSender:) withObject:sender afterDelay:0];

        }
    }
    setHttpCheckErr:^(BTEHttpResult *result) {
        NSLog(@"Err : %@",((BTEErrorData *)[result._datas._errors objectAtIndex:0])._detaiMsg);
        [self.view makeToast:((BTEErrorData *)[result._datas._errors objectAtIndex:0])._detaiMsg duration:1.5 position:@"bottom"];
    }
     ];
}
-(void)BottmViewClicked:(id)sender
{
	//当bottmview上的button不可点时，截取点击事件
}
-(void)commentButtonClicked:(id)sender
{
    PostInfo *postInfo = [_ListData objectAtIndex:[sender tag]];
    PostDetailViewController *nextView = [[PostDetailViewController alloc] init];
    nextView.postInfo = postInfo;
    [nextView setDelegate:self];
    [nextView setDataIndex:[sender tag]];
    [self.navigationController pushViewController:nextView animated:YES];
}
-(void)collectButtonClicked:(id)sender
{
    NSMutableDictionary *para = [[NSMutableDictionary alloc] initWithCapacity:0];
    [para setValue:((PostInfo *)[_ListData objectAtIndex:[sender tag]]).message_id forKey:@"messageId"];
    NSString* cmdid = [[NSString alloc] init];
    PostInfo *postInfo = [_ListData objectAtIndex:[sender tag]];
    if ([[postInfo valueForKey:@"has_collect"] integerValue] == 0) {
        cmdid = @"1";
    }
    else
    {
        cmdid = @"3";
    }
    [self doService:@"230001" setCmd:cmdid setConditions:para setHttpInfo:^(BTEHttpResult *result) {
        
        BTEHttpResultDatas *datas = result._datas;
        
        if ([[datas._item valueForKey:@"UPDATE_EXECUTE"] boolValue]) {
            NSLog(@"%@",datas._item);
            [self performSelector:@selector(updatePostInfoWithSender:) withObject:sender afterDelay:0];
            
        }
    }
    setHttpCheckErr:^(BTEHttpResult *result) {
        NSLog(@"Err : %@",((BTEErrorData *)[result._datas._errors objectAtIndex:0])._detaiMsg);
        [self.view makeToast:((BTEErrorData *)[result._datas._errors objectAtIndex:0])._detaiMsg duration:1.5 position:@"bottom"];
    }
     ];
}
-(void)updatePostInfoWithSender:(id)sender
{
    NSMutableDictionary *para = [[NSMutableDictionary alloc] initWithCapacity:0];
    [para setValue:((PostInfo *)[_ListData objectAtIndex:[sender tag]]).message_id forKey:@"message_id"];
    
    [self doService:@"200002" setCmd:@"1" setConditions:para setHttpInfo:^(BTEHttpResult *result) {
        
        BTEHttpResultDatas *datas = result._datas;
        PostInfo *postInfo = (PostInfo *)datas._item;
        ((PostInfo *)[_ListData objectAtIndex:[sender tag]]).praise_count = [[postInfo valueForKey:@"praise_count"] integerValue];
        ((PostInfo *)[_ListData objectAtIndex:[sender tag]]).slander_count = [[postInfo valueForKey:@"slander_count"] integerValue];
        ((PostInfo *)[_ListData objectAtIndex:[sender tag]]).type = [postInfo valueForKey:@"type"];
        ((PostInfo *)[_ListData objectAtIndex:[sender tag]]).has_collect = [[postInfo valueForKey:@"has_collect"] integerValue];
        CustomTableViewCell *cell = (CustomTableViewCell *)[[sender superview] superview].superview;
        [cell showPostInfo:[_ListData objectAtIndex:[sender tag]]];
    }
     ];

}

-(void)refreshDataItem:(PostInfo *)postInfo atIndex:(NSInteger)index
{
    [_ListData replaceObjectAtIndex:index withObject:postInfo];
    [_TableView reloadData];
}

@end
